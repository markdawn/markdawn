#include "StdAfx.h"
#include "CalAreaAverageT.h"
/*
const float s[24][24]={{135.07,67.54,0,0,67.54,0,0,0,0,0,0,0,0,0,0,0},
{43.14,129.42,86.28,0,86.28,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,93,93,93,93,0,0,0,0,0,0,0,0},
{0,0,0,0,110.67,110.67,110.67,110.67,0,0,0,0,0,0,0,0},
{0,0,0,0,135.07,0,0,0,67.54,135.07,0,0,0,67.54,135.07,0},
{0,0,0,0,123.94,0,0,0,185.91,0,0,0,61.97,123.94,0,0},
{61.97,123.94,0,0,185.91,0,0,0,123.94,0,0,0,0,0,0,0},
{0,67.54,135.07,0,67.54,135.07,0,0,212.13,0,0,0,0,0,0,0},
{0,0,0,0,0,0,110.67,110.67,110.67,110.67,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,93,93,93,93,0,0,0,0},
{0,0,0,0,0,0,0,0,86.28,0,0,0,43.14,129.42,86.28,0},
{0,0,0,0,0,0,0,0,67.54,0,0,0,135.07,67.54,0,0},
{0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0},
{0,0,182.65,0,0,0,182.65,0,0,182.65,0,0,0,182.65,0,0},
{0,0,0,0,0,0,0,135.07,0,0,135.07,67.54,0,135.07,67.54,0},
{0,0,0,0,0,0,0,0,0,0,0,86.28,0,86.28,129.42,43.14},
{0,182.65,0,0,0,182.65,0,0,0,0,182.65,0,0,0,182.65,0},
{0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0},
{0,0,0,0,0,0,0,123.94,0,0,0,185.91,0,0,123.94,61.97},
{0,0,0,0,0,0,0,0,0,0,0,67.54,0,0,67.54,135.07},
{0,135.07,67.54,0,0,0,135.07,67.54,0,0,0,135.07,0,0,0,0},
{0,0,123.94,61.97,0,0,0,185.91,0,0,0,123.94,0,0,0,0},
{0,86.28,129.42,43.14,0,0,0,86.28,0,0,0,0,0,0,0,0},
{0,0,67.54,135.07,0,0,0,67.54,0,0,0,0,0,0,0,0}};
*/

const float s[24][24]={{212.13,106.07,0,0,106.07,0,0,0,0,0,0,0,0,0,0,0},
{83.85,251.56,167.71,0,167.71,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,225,225,225,225,0,0,0,0,0,0,0,0},
{0,0,0,0,237.17,237.17,237.17,237.17,0,0,0,0,0,0,0},
{0,0,0,0,212.13,0,0,0,106.07,212.13,0,0,0,106.07,212.13,0},
{0,0,0,0,167.71,0,0,0,251.56,0,0,0,83.85,167.71,0,0},
{83.85,167.71,0,0,251.56,0,0,0,167.71,0,0,0,0,0,0,0},
{0,106.07,212.13,0,106.07,212.13,0,0,212.13,0,0,0,0,0,0,0},
{0,0,0,0,0,0,237.17,237.17,237.17,237.17,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,225,225,225,225,0,0,0,0},{0,0,0,0,0,0,0,0,167.71,0,0,0,83.85,251.56,167.7,0},
{0,0,0,0,0,0,0,0,106.07,0,0,0,212.13,106.07,0,0},
{0,225,0,0,0,225,0,0,0,225,0,0,0,225,0,0},
{0,0,237.17,0,0,0,237.17,0,0,237.17,0,0,0,237.17,0,0},
{0,0,0,0,0,0,0,212.13,0,0,212.13,106.07,0,212.13,106.07,0},
{0,0,0,0,0,0,0,0,0,0,0,167.71,0,167.71,251.6,83.85},
{0,231.17,0,0,0,237.17,0,0,0,0,237.17,0,0,0,237.17,0},
{0,0,225,0,0,0,225,0,0,0,225,0,0,0,225,0},
{0,0,0,0,0,0,0,167.71,0,0,0,251.56,0,0,167.71,83.85},
{0,0,0,0,0,0,0,0,0,0,0,106.07,0,0,106.07,212.13},
{0,212.13,106.07,0,0,0,212.13,106.07,0,0,0,212.13,0,0,0,0},
{0,0,167.71,83.85,0,0,0,251.56,0,0,0,167.71,0,0,0,0},
{0,167.71,251.56,83.85,0,0,0,167.71,0,0,0,0,0,0,0,0},
{0,0,106.07,212.13,0,0,0,106.07,0,0,0,0,0,0,0,0}};



CCalAreaAverageT::CCalAreaAverageT(void)
{
	InitPara();
}


CCalAreaAverageT::~CCalAreaAverageT(void)
{

}

void CCalAreaAverageT::InitPara()
{
	m_ProcessData.Init(1,1,0,5120,20224); //初始化数据处理类，1，1，0 处理数据算法标记，5120 数据长度，20224 采样率
	m_ProcessData.SetFilterPara(0.0806,0.2206,0.3897,0,-0.3897);  //设置滤波参数
	m_CalFlightTime.Init(200,800,1200,20224,0.05); //飞渡类初始化，200，800，1200 飞渡计算序列长度参数，20224采样率，0.05阈值
	m_CalAreaT.Sets(s,24,16);			//输入S矩阵（S矩阵为温度场划分特征矩阵），24，16 维度

}

void CCalAreaAverageT::PreProcessData(int* dataIn,float* dataOut)
{
	m_ProcessData.ReadData(dataIn);                    //读取采样数据，data1为采样数据。
	m_ProcessData.Filter();      //滤波
	m_ProcessData.Nto1(0,1800);  //归一
	m_ProcessData.GetData(dataOut);  //返回数据处理后的结果，结果存储与fdata[0]中，一次只能处理一组数据。
}

float CCalAreaAverageT::CalFlightTime(float** fOnePairData ,int iLenth)
{
	m_CalFlightTime.readdata(fOnePairData,iLenth);      //读取数据，注意fdata是一个二维数据，计算一个飞渡时间需要两组数据，每组5120数据长度
	m_CalFlightTime.CalcTime();                  //计算飞渡时间
	float fTime=m_CalFlightTime.GetTime();           //返回计算结果到Ttime中
	if (fTime<0 && fTime>0.2) //超出0.2s时，赋值为10ms
	{
		fTime = 0.01;
	}
	return fTime;
}

void CCalAreaAverageT::CalAverageT(float** fFlightTime,int iPathNum,float* fCalTResult,int iAreaNum)
{

	m_CalAreaT.Sett(fFlightTime,1,iPathNum);			//输入t矩阵，t为24个飞渡时间构成的矩阵，构成一个t矩阵需要进行24次飞渡计算；1，24 维度
	m_CalAreaT.z=20.05f;					//定义z的特征值
	m_CalAreaT.lsm();					//温度场模拟计算
	m_CalAreaT.GetT(fCalTResult,iAreaNum);		//返回结果到Tresult中，注意Tresult为包含16个值数组。16，数据个数
}