#include "StdAfx.h"
#include "RebuildAreaT.h"


CRebuildAreaT::CRebuildAreaT(void)
{
	m_fSavePairSignalData = new float*[2];
	for (int i = 0; i< 2;i++)
	{
		m_fSavePairSignalData[i] = new float [N_DATALENTH];
	}

	m_fSaveFlightTime = new float*[1];
	for (int i = 0; i< 1;i++)
	{
		m_fSaveFlightTime[i] = new float[PATH_NUM];
	}
}


CRebuildAreaT::~CRebuildAreaT(void)
{
	for (int i = 0;i<2;i++)
	{
		delete m_fSavePairSignalData[i];
	}
	delete []m_fSavePairSignalData;
	delete []m_fSaveFlightTime;
}



BOOL CRebuildAreaT::CalAreaAvrageT(int*** piDataIn, UINT* iAreaT, int nPathNum, int nAreaNum)
{
#ifdef _DEBUG_PROJECT

	iAreaT[0] = 892;
	iAreaT[1] = 906;
	iAreaT[2] = 912;
	iAreaT[3] = 894;
	iAreaT[4] = 972;
	iAreaT[5] = 1029;
	iAreaT[6] = 1043;
	iAreaT[7] = 917;
	iAreaT[8] = 896;
	iAreaT[9] = 1038;
	iAreaT[10] = 1041;
	iAreaT[11] = 921;
	iAreaT[12] = 889;
	iAreaT[13] = 893;
	iAreaT[14] = 901;
	iAreaT[15] = 885;

	float t[1][24]={0.011953288,0.018899814,0.024616755,0.025948248,
		0.023557626,0.018899814,0.018899814,0.023557626,0.025948248,
		0.024616755,0.018899532,0.011953288,0.024616755,0.025948248,
		0.023557626,0.018900941,0.025779206,0.024616755,0.018899814,
		0.011953288,0.023557626,0.018899814,0.018899814,0.011953288};

	for (int i = 0;i<24;i++)
	{
		m_fSaveFlightTime[0][i]=t[0][i];
	}

#else
	CalAllPathFlightTime(piDataIn,nPathNum);//计算所有路径的飞渡时间
	float fTempT[AREA_BLOCK_NUM] = {0.0f};
	m_CalAreaAverageT.CalAverageT(m_fSaveFlightTime,PATH_NUM,fTempT,nAreaNum);
	for (int i = 0; i<AREA_BLOCK_NUM;i++)
	{
		iAreaT[i] = (UINT)(fTempT[i]-273.15f);
		if (iAreaT[i] < 0)
		{
			iAreaT[i] = 0;
		}
		if (iAreaT[i] >1400)
		{
			iAreaT[i] = 1400;
		}
	}
#endif
	return TRUE;
}


// 计算网格数据:输入区域平均温度，输出网格数据以及网格数据信息GridBaiscInfo
BOOL CRebuildAreaT::CalTGridData(UINT* fAreaT, float** fPGridBuff, int nAreaNum,GridBaiscInfo* gridInfo)
{
#ifdef _DEBUG_PROJECT
	//调试时：读txt保存的数据
	m_getIsothermData.ReadIsothermData(fPGridBuff,gridInfo);
#else
	//计算网格数据
#endif
	return TRUE;
}

void CRebuildAreaT::CalAllPathFlightTime(int***pBufferIn,int iPathNum)
{
	int i = 0;
	for (i = 0; i<iPathNum;i++)
	{
		m_CalAreaAverageT.PreProcessData(pBufferIn[gPathOrder[i].iSendModule][gPathOrder[i].iSendModule],m_fSavePairSignalData[0]);//处理路径发声一端的数据
		m_CalAreaAverageT.PreProcessData(pBufferIn[gPathOrder[i].iSendModule][gPathOrder[i].iReveiveModule],m_fSavePairSignalData[1]);//处理路径接收一端的数据

	    m_fSaveFlightTime[0][i] = m_CalAreaAverageT.CalFlightTime(m_fSavePairSignalData ,N_DATALENTH); //计算飞渡时间
	}
}
